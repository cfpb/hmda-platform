apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "institutions-api.fullname" . }}
  annotations:
    reloader.stakater.com/search: "true"
  labels:
    app: {{ template "institutions-api.name" . }}
    chart: {{ template "institutions-api.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "institutions-api.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "institutions-api.name" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.service.account.name }}
      volumes:
        - name: secret-provider-vol
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: hmda-rds-secrets-provider
        - name: tz-config
          hostPath:
            path: /usr/share/zoneinfo/America/New_York
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          volumeMounts:
            - name: secret-provider-vol
              mountPath: /mnt/secrets-store
            - name: tz-config
              mountPath: /etc/localtime
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL            
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ template "institutions-api.fullname" . }}-config
          env:
            - name: KAFKA_INSTITUTIONS_TOPIC
              value: {{.Values.kafka.institutionsTopic}}
            - name: KAFKA_INSTITUTIONS_GROUP
              value: {{.Values.kafka.institutionsGroup}}
            - name: CURRENT_YEAR
              valueFrom:
                configMapKeyRef:
                  name: timed-guards
                  key: currentYear
            - name: RULES_YEARLY_FILING_YEARS_ALLOWED
              valueFrom:
                configMapKeyRef:
                  name: timed-guards
                  key: yearsAllowed
#            - name: BANK_FILTER_LIST
#              valueFrom:
#                configMapKeyRef:
#                  key: bank-filter-list
#                  name: bank-filter-configmap
            - name: RULES_QF_FILING_YEARS_ALLOWED
              valueFrom:
                configMapKeyRef:
                  name: timed-guards
                  key: quarterlyYearsAllowed
            - name: PG_HOST
              valueFrom:
                secretKeyRef:
                  name: platform-rds-secrets
                  key: host
            - name: PG_DATABASE
              valueFrom:
                secretKeyRef:
                  name: platform-rds-secrets
                  key: database
            - name: PG_USER
              valueFrom:
                secretKeyRef:
                  name: platform-rds-secrets
                  key: username
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: platform-rds-secrets
                  key: password
#            - name: PG_SSL
#              valueFrom:
#                configMapKeyRef:
#                  name: postgresql-configmap
#                  key: postgres.ssl
            - name: INSTITUTION_PG_CREATE_SCHEMA
              value: "{{ .Values.postgresql.createSchema }}"
            {{- if .Values.kafka.security }}
            - name: KAFKA_SECURITY
              value: {{.Values.kafka.security}}
            {{- end }}
            - name: KAFKA_CLUSTER_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: kafka-configmap
                  key: kafka.hosts
#            - name: AWS_ACCESS_KEY_ID
#              valueFrom:
#                secretKeyRef:
#                  name: aws-credentials
#                  key: aws-access-key-id
#            - name: AWS_SECRET_ACCESS_KEY
#              valueFrom:
#                secretKeyRef:
#                  name: aws-credentials
#                  key: aws-secret-access-key
#            - name: JDBC_URL
#              valueFrom:
#                secretKeyRef:
#                  name: inst-postgres-credentials
#                  key: url
          ports:
            - name: {{ .Values.service.name }}
              containerPort: 9092
              protocol: {{ .Values.service.protocol }}
#          livenessProbe:
#            httpGet:
#              path: /
#              port: {{ .Values.service.port }}
#          readinessProbe:
#            httpGet:
#              path: /
#              port: {{ .Values.service.port }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
