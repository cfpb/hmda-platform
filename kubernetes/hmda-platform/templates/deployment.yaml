apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ template "hmda-platform.name" . }}
  name: {{ template "hmda-platform.fullname" . }}
spec:
  replicas: 3
  selector:
    matchLabels:
      app: {{ template "hmda-platform.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "hmda-platform.name" . }}
        release: {{ .Release.Name }}
        actorSystemName: {{ .Values.hmda.actorSystemName }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ .Values.service.account.name }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: HMDA_RUNTIME_MODE
          value: {{ .Values.hmda.runtimeMode }}
        - name: HOST_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: CASSANDRA_CLUSTER_HOSTS
          valueFrom:
            configMapKeyRef:
              name: cassandra-configmap
              key: cassandra-hosts
        - name: CASSANDRA_CLUSTER_USERNAME
          valueFrom:
            secretKeyRef:
              name: cassandra-credentials
              key: cassandra.username
        - name: CASSANDRA_CLUSTER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cassandra-credentials
              key: cassandra.password
        - name: KEYCLOAK_AUTH_URL
          valueFrom:
            configMapKeyRef:
              name: keycloak-configmap
              key: auth.url
        - name: KAFKA_CLUSTER_HOSTS
          valueFrom:
            configMapKeyRef:
              name: kafka-configmap
              key: kafka.hosts
        - name: GIT_DESCRIBE_TAG
          valueFrom:
            configMapKeyRef:
              name: imagetag-configmap
              key: image-tag
        livenessProbe:
          tcpSocket:
            port: {{ .Values.bootstrap.port }}
        ports:
        # akka remoting
        - name: {{ .Values.remoting.name }}
          containerPort: {{ .Values.remoting.port }}
          protocol: {{ .Values.remoting.protocol }}
        # akka-management bootstrap
        - name: {{ .Values.bootstrap.name }}
          containerPort: {{ .Values.bootstrap.port }}
          protocol: {{ .Values.bootstrap.protocol }}
        # external http
        - name: {{ .Values.cluster.name }}
          containerPort: {{ .Values.cluster.port }}
          protocol: {{ .Values.cluster.protocol }}
