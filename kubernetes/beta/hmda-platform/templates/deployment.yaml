apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ template "hmda-platform.name" . }}
  name: {{ template "hmda-platform.fullname" . }}
spec:
  replicas: 3
  selector:
    matchLabels:
      app: {{ template "hmda-platform.name" . }}
      release: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "hmda-platform.name" . }}
        release: {{ .Release.Name }}
        actorSystemName: {{ .Values.hmda.actorSystemName }}
    spec:
      volumes:
        - name: tz-config
          hostPath:
            path: /usr/share/zoneinfo/America/New_York
      serviceAccountName: {{ .Values.service.account.name }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          volumeMounts:
            - name: tz-config
              mountPath: /etc/localtime
          resources:
            limits:
              memory: "4200Mi"
              cpu: "4"
            requests:
              memory: "4200Mi"
              cpu: "2"
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL       
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PLATFORM_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
            - name: CURRENT_YEAR
              valueFrom:
                configMapKeyRef:
                  name: timed-guards
                  key: currentYear
            - name: RULES_YEARLY_FILING_YEARS_ALLOWED
              valueFrom:
                configMapKeyRef:
                  name: timed-guards
                  key: yearsAllowed
            - name: RULES_QF_FILING_YEARS_ALLOWED
              valueFrom:
                configMapKeyRef:
                  name: timed-guards
                  key: quarterlyYearsAllowed
            - name: RULES_QF_Q1_START
              valueFrom:
                configMapKeyRef:
                  name: timed-guards
                  key: q1Start
            - name: RULES_QF_Q1_END
              valueFrom:
                configMapKeyRef:
                  name: timed-guards
                  key: q1End
            - name: RULES_QF_Q2_START
              valueFrom:
                configMapKeyRef:
                  name: timed-guards
                  key: q2Start
            - name: RULES_QF_Q2_END
              valueFrom:
                configMapKeyRef:
                  name: timed-guards
                  key: q2End
            - name: RULES_QF_Q3_START
              valueFrom:
                configMapKeyRef:
                  name: timed-guards
                  key: q3Start
            - name: RULES_QF_Q3_END
              valueFrom:
                configMapKeyRef:
                  name: timed-guards
                  key: q3End
            - name: ACTION_DATE_Q1_START
              valueFrom:
                configMapKeyRef:
                  name: timed-guards
                  key: actionQ1Start
            - name: ACTION_DATE_Q1_END
              valueFrom:
                configMapKeyRef:
                  name: timed-guards
                  key: actionQ1End
            - name: ACTION_DATE_Q2_START
              valueFrom:
                configMapKeyRef:
                  name: timed-guards
                  key: actionQ2Start
            - name: ACTION_DATE_Q2_END
              valueFrom:
                configMapKeyRef:
                  name: timed-guards
                  key: actionQ2End
            - name: ACTION_DATE_Q3_START
              valueFrom:
                configMapKeyRef:
                  name: timed-guards
                  key: actionQ3Start
            - name: ACTION_DATE_Q3_END
              valueFrom:
                configMapKeyRef:
                  name: timed-guards
                  key: actionQ3End
            - name: KAFKA_EMAIL_TOPIC
              value: {{.Values.kafka.emailTopic}}
            - name: KAFKA_INSTITUTIONS_TOPIC
              value: {{.Values.kafka.institutionsTopic}}
            - name: KAFKA_SIGN_TOPIC
              value: {{.Values.kafka.signTopic}}
            - name: COMMIT_ID
              value: {{ .Values.image.commitId }}
            - name: HMDA_RUNTIME_MODE
              value: {{ .Values.hmda.runtimeMode }}
            - name: KUBERNETES_HMDA_POD_NAMESPACE
              value: {{.Values.hmda.podNamespace}}
            - name: KUBERNETES_HMDA_SERVICE_NAME
              value: {{.Values.hmda.apiNamespace}}
            - name: KUBERNETES_HMDA_SERVICE_NAMESPACE
              value: {{.Values.hmda.serviceNamespace}}
            - name: KUBERNETES_HMDA_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: HOST_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: CASSANDRA_CLUSTER_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: cassandra-configmap
                  key: cassandra-hosts
            - name: CASSANDRA_CLUSTER_DC
              valueFrom:
                configMapKeyRef:
                  name: cassandra-configmap
                  key: cassandra-cluster-dc
            - name: CASSANDRA_JOURNAL_KEYSPACE
              valueFrom:
                configMapKeyRef:
                  name: cassandra-configmap
                  key: cassandra-keyspace
            - name: CASSANDRA_SNAPSHOT_KEYSPACE
              valueFrom:
                configMapKeyRef:
                  name: cassandra-configmap
                  key: cassandra-keyspace-snapshot
            - name: CASSANDRA_CLUSTER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: cassandra-credentials
                  key: cassandra.username
            - name: CASSANDRA_CLUSTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cassandra-credentials
                  key: cassandra.password
            - name: KEYCLOAK_REALM_URL
              valueFrom:
                configMapKeyRef:
                  name: http-configmap
                  key: auth.realmUrl
            - name: KEYCLOAK_PUBLIC_MODULUS
              valueFrom:
                configMapKeyRef:
                  name: keycloak-public-key-configmap
                  key: keycloak.publicKey.modulus
            - name: KEYCLOAK_PUBLIC_EXPONENT
              valueFrom:
                configMapKeyRef:
                  name: keycloak-public-key-configmap
                  key: keycloak.publicKey.exponent
            - name: KAFKA_CLUSTER_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: kafka-configmap
                  key: kafka.hosts
            - name: HTTP_CENSUS_HOST
              valueFrom:
                configMapKeyRef:
                  name: http-configmap
                  key: census.host
            - name: HTTP_CENSUS_PORT
              valueFrom:
                configMapKeyRef:
                  name: http-configmap
                  key: census.port
          #        livenessProbe:
          #          tcpSocket:
          #            port: {{ .Values.bootstrap.port }}
          #        readinessProbe:
          #          httpGet:
          #            path: /ready
          #            port: {{ .Values.bootstrap.name }}
          ports:
            # akka remoting
            - name: {{ .Values.remoting.name }}
              containerPort: {{ .Values.remoting.port }}
              protocol: {{ .Values.remoting.protocol }}
            # akka-management bootstrap
            - name: {{ .Values.bootstrap.name }}
              containerPort: {{ .Values.bootstrap.port }}
              protocol: {{ .Values.bootstrap.protocol }}
            # external http
            - name: {{ .Values.cluster.name }}
              containerPort: {{ .Values.cluster.port }}
              protocol: {{ .Values.cluster.protocol }}
