apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "irs-publisher.fullname" . }}
  annotations:
    reloader.stakater.com/search: "true"
    downscaler/uptime: Mon-Fri 10:00-23:00 UTC
  labels:
    app: {{ include "irs-publisher.name" . }}
    chart: {{ include "irs-publisher.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "irs-publisher.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "irs-publisher.name" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: hmda-platform
      volumes:
        - name: cass-provider-vol
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: k8ssandra-credentials-provider
#        - name: cassandra-truststore
#          secret:
#            secretName: cassandra-truststore
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          volumeMounts:
            - name: cass-provider-vol
              readOnly: true
              mountPath: /mnt/cass-secrets-store
#            - name: cassandra-truststore
#              readOnly: true
#              mountPath: "/opt/cassandra_truststore"
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL            
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            limits:
              cpu: "4"
              memory: "2200Mi"
          env:
            - name: KAFKA_IRS_TOPIC
              value: {{.Values.kafka.irsTopic}}
            - name: KAFKA_SIGN_TOPIC
              value: {{.Values.kafka.signTopic}}
            - name: KAFKA_IRS_GROUP
              value: {{.Values.kafka.irsGroup}}
            {{- if .Values.kafka.security }}
            - name: KAFKA_SECURITY
              value: {{.Values.kafka.security}}
            {{- end }}              
            - name: CASSANDRA_JOURNAL_KEYSPACE
              valueFrom:
                configMapKeyRef:
                  name: cassandra-configmap
                  key: cassandra-keyspace
            - name: CASSANDRA_SNAPSHOT_KEYSPACE
              valueFrom:
                configMapKeyRef:
                  name: cassandra-configmap
                  key: cassandra-keyspace-snapshot
            - name: CASSANDRA_CLUSTER_DC
              valueFrom:
                configMapKeyRef:
                  name: cassandra-configmap
                  key: cassandra-cluster-dc
            - name: CASSANDRA_CLUSTER_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: cassandra-configmap
                  key: cassandra-hosts
            - name: CASSANDRA_CLUSTER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: cassandra-credentials
                  key: cassandra.username
            - name: CASSANDRA_CLUSTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cassandra-credentials
                  key: cassandra.password
#            - name: CASSANDRA_TRUSTSTORE_FILE
#              value: "/opt/cassandra_truststore/cassandra_truststore.jks"
#            - name: CASSANDRA_TRUSTSTORE_PASSWORD
#              valueFrom:
#                secretKeyRef:
#                  name: cassandra-truststore-password
#                  key: password
            - name: BANK_FILTER_LIST
              valueFrom:
                configMapKeyRef:
                  name: bank-filter-configmap
                  key: bank-filter-list
            - name: KAFKA_CLUSTER_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: kafka-configmap
                  key: kafka.hosts
#            - name: AWS_ACCESS_KEY_ID
#              valueFrom:
#                secretKeyRef:
#                  name: aws-credentials
#                  key: aws-access-key-id
#            - name: AWS_SECRET_ACCESS_KEY
#              valueFrom:
#                secretKeyRef:
#                  name: aws-credentials
#                  key: aws-secret-access-key
            - name: AWS_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: s3-configmap
                  key: aws-environment
            - name: S3_PUBLIC_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: s3-configmap
                  key: s3-public-bucket
            - name: HTTP_CENSUS_HOST
              valueFrom:
                configMapKeyRef:
                  name: http-configmap
                  key: census.host
            - name: HTTP_CENSUS_PORT
              valueFrom:
                configMapKeyRef:
                  name: http-configmap
                  key: census.port
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
