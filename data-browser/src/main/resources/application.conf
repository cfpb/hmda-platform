include "cors.conf"

akka {
  loglevel = info
  log-dead-letters = off
  log-dead-letters-during-shutdown = off
}

akka.http.server.request-timeout = 4 minutes

server {
  bindings {
    address: "0.0.0.0"
    address: ${?SERVER_BIND_ADDRESS}

    port: 8070
    port: ${?BIND_PORT}
  }

  ask-timeout: 10

  s3 {
    environment = "dev"
    environment = ${?AWS_ENVIRONMENT}
    public-bucket = "cfpb-hmda-public"
    url = "https://"${server.s3.public-bucket}".s3.amazonaws.com"
    url = ${?S3_URL}
    routes {
      filtered-queries {
        2017 = "data-browser/2017/filtered-queries"
        2018 = "data-browser/2018/filtered-queries/three-year"
        2019 = "data-browser/2019/filtered-queries/three-year"
        2020 = "data-browser/2020/filtered-queries/three-year"
        2021 = "data-browser/2021/filtered-queries/three-year"
        2022 = "data-browser/2022/filtered-queries/one-year"
        2023 = "data-browser/2023/filtered-queries/one-year"
        2024 = "data-browser/2024/filtered-queries/snapshot"
      }
      // this is where s3 files with unique md5 hash strings are saved
    }
  }
}
// see keys dbconfig and db in common/src/main/resources/reference.conf
// we provide project overrides for development
dbconfig {
  host = "127.0.0.1"
  host = ${?PG_HOST}

  port = 5432
  port = ${?PG_PORT}

  database = "hmda_user"
  database = ${?PG_DATABASE}

  table {
     2024 = "modifiedlar2024_snapshot_v3"
     2023 = "modifiedlar2023_one_year_05192025_v2"
     2022 = "modifiedlar2022_one_year_05012024"
     2021 = "modifiedlar2021_three_year_05192025_v2"
     2020 = "modifiedlar2020_three_year_05012024"
     2019 = "modifiedlar2019_three_year_04122023"
     2018 = "modifiedlar2018_three_year_04052022"
     2017 = "modifiedlar2017_ultimate"
   }

  user = "hmda_user"
  user = ${?PG_USER}

  password = "mysecretpassword"
  password = ${?PG_PASSWORD}

  ssl = "disable"
  ssl = ${?PG_SSL}

  additionalConfig="ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory"
  additionalConfig=${?PG_ADDCONFIG}
}

databrowser_db {
  profile = "slick.jdbc.PostgresProfile$"

  db {
    profile = slick.jdbc.PostgresProfile
    url = "jdbc:postgresql://"${dbconfig.host}":"${dbconfig.port}"/"${dbconfig.database}"?user="${dbconfig.user}"&password="${dbconfig.password}"&sslmode="${dbconfig.ssl}"&"${dbconfig.additionalConfig}
    url = ${?JDBC_URL}
    numThreads = 20
    queueSize = 2000
    connectionTimeout = 20000
    validationTimeout = 10000
  }
}

redis {
  hostname: "localhost"
  hostname: ${?REDIS_HOSTNAME}

  port: 6379
  port: ${?REDIS_PORT}

  protocol: redis
  protocol: ${?REDIS_PROTOCOL}

  password: ""
  password: ${?REDIS_PASS}

  ttl: 8760 hours
}