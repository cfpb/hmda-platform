akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  http.parsing.max-content-length = 1G
  http.server.default-host-header = "cfpb.gov"

  actor {
    provider = cluster
  }

  remote {
    log-remote-lifecycle-events = error
    netty.tcp {
      hostname = ${clustering.ip}
      port = ${clustering.port}
    }
  }

  cluster {
    failure-detector.threshold = 12 //Increase value for AWS environments
    metrics.enabled = off

    retry-unsuccessful-join-after = 20s

    //DON'T USE IN PRODUCTION!!!!!
    auto-down-unreachable-after = 10s

  }

  extensions = ["de.heikoseeberger.constructr.ConstructrExtension"]

}

constructr.coordination.nodes = [${hmda.zookeeperHost}":"${hmda.zookeeperPort}]

clustering {
  name = "hmda"
  name = ${?HMDA_CLUSTER_NAME}
  ip = "127.0.0.1"
  port = 0
  port = ${?APP_PORT}
}

hmda {
  actor {
    timeout = 5
  }
  http {
    host = "0.0.0.0"
    host = ${?HMDA_HTTP_HOST}
    adminHost = "0.0.0.0"
    adminHost = ${?HMDA_HTTP_ADMIN_HOST}
    publicHost = "0.0.0.0"
    publicHost = ${?HMDA_HTTP_PUBLIC_HOST}
    port = 8080
    port = ${?HMDA_HTTP_PORT}
    adminPort = 8081
    adminPort = ${?HMDA_HTTP_ADMIN_PORT}
    publicPort = 8082
    publicPort = ${?HMDA_HTTP_PUBLIC_PORT}
    timeout = 10
    timeout = ${?HMDA_HTTP_TIMEOUT}
  }
  isDemo = true
  isDemo = ${?HMDA_IS_DEMO}
  zookeeperHost = "192.168.99.100"
  zookeeperHost = ${?ZOOKEEPER_HOST}
  zookeeperPort = 2181
  zookeeperPort = ${?ZOOKEEPER_PORT}
}


