akka {
  loglevel = info
  log-dead-letters = off
  log-dead-letters-during-shutdown = off

  http {
    host-connection-pool {
      max-connections = 32
      min-connections = 5
      max-open-requests = 512
      idle-timeout = 15 seconds
    }
  }
}

cassandra-journal {
  contact-points = ["localhost"]
  contact-points = [${?CASSANDRA_CLUSTER_HOSTS}]
  keyspace = "hmda2_journal"
  keyspace = ${?CASSANDRA_JOURNAL_KEYSPACE}
  table = "journal"
  authentication.username = ""
  authentication.username = ${?CASSANDRA_CLUSTER_USERNAME}
  authentication.password = ""
  authentication.password = ${?CASSANDRA_CLUSTER_PASSWORD}
  events-by-tag.max-message-batch-size = 30
  events-by-tag.max-message-batch-size = ${?TAG_BATCH_SIZE}
  events-by-tag.flush-interval = 150ms
  events-by-tag.flush-interval = ${?TAG_FLUSH_INTERVAL}
}

cassandra-snapshot-store {
  contact-points = ["localhost"]
  contact-points = [${?CASSANDRA_CLUSTER_HOSTS}]
  keyspace = "hmda2_snapshot"
  keyspace = ${?CASSANDRA_SNAPSHOT_KEYSPACE}
  table = "snapshot"
  authentication.username = ""
  authentication.username = ${?CASSANDRA_CLUSTER_USERNAME}
  authentication.password = ""
  authentication.password = ${?CASSANDRA_CLUSTER_PASSWORD}
}

kafka {
  hosts = "localhost:9092"
  hosts = ${?KAFKA_CLUSTER_HOSTS}
  ssl {
    truststore.location=""
    truststore.location = ${?KAFKA_SSL_LOCATION}
    truststore.password=""
    truststore.password = ${?KAFKA_SSL_PASSWORD}
    endpoint=""
    endpoint = ${?KAFKA_SSL_ENDPOINT}
  }
}

aws {
  access-key-id = ""
  access-key-id = ${?AWS_ACCESS_KEY_ID}
  secret-access-key = ""
  secret-access-key = ${?AWS_SECRET_ACCESS_KEY}
  environment = "dev" //change to "prod" for production S3 bucket
  environment = ${?AWS_ENVIRONMENT}
  public-bucket = "cfpb-hmda-public"
  public-bucket = ${?S3_PUBLIC_BUCKET}
  region = "us-east-1"
  region = ${?AWS_REGION}
}

hmda {
  lar {
    modified {
      parallelism = 1
      regenerateMlar = false
      regenerateMlar = ${IS_REGENERATE_MLAR}
      generateS3Files = true
      generateS3Files = ${?IS_GENERATE_MLAR_S3_FIES}
      creteDispositionRecord = false
      creteDispositionRecord = ${?IS_CREATE_DISPOSITION_KAFKA_RECORD}
      justGenerateS3File = false
      justGenerateS3FileHeader = false
    }
  }

  census {
    http {
      host = "0.0.0.0"
      host = ${?HTTP_CENSUS_HOST}
      port = 9093
      port = ${?HTTP_CENSUS_PORT}
    }
  }
}
