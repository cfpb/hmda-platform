include "persistence.conf"

akka {
  stdout-loglevel = "WARNING"
  loglevel = "INFO"
}

akka.http.host-connection-pool.response-entity-subscription-timeout = 100.seconds

hmda {
  loader {
    parallelism = 4
    institution {
      url = "http://localhost:8081/institutions"
      url = ${?INSTITUTION_LOADER_URL}
    }
  }

  institution {
    createSchema = false
    createSchema = ${?INSTITUTION_PG_CREATE_SCHEMA}
    timeout = 3
    http {
      host = "0.0.0.0"
      port = 9092
      port = ${?INSTITUTION_PORT}
      timeout = 5000
    }
  }
}

institution_db {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    profile = slick.jdbc.PostgresProfile
    url = "jdbc:postgresql://"${dbconfig.host}":"${dbconfig.port}"/"${dbconfig.database}"?user="${dbconfig.user}"&password="${dbconfig.password}"&sslmode="${dbconfig.ssl}"&"${dbconfig.additionalConfig}
    url = ${?JDBC_URL}
    numThreads = 8
    queueSize = 2000
    connectionTimeout = 20000
    validationTimeout = 10000
  }
}

kafka {
  hosts = "localhost:9092"
  hosts = ${?KAFKA_CLUSTER_HOSTS}
  idle-timeout = 5
  idle-timeout = ${?KAFKA_IDLE_TIMEOUT}
  ssl {
    truststore.location=""
    truststore.location = ${?KAFKA_SSL_LOCATION}
    truststore.password=""
    truststore.password = ${?KAFKA_SSL_PASSWORD}
    endpoint=""
    endpoint = ${?KAFKA_SSL_ENDPOINT}
  }
}

filter {
  bank-filter-list="BANK1LEIFORTEST12345,BANK3LEIFORTEST12345,BANK4LEIFORTEST12345,999999LE3ZOZXUS7W648,28133080042813308004,B90YWS6AFX2LGWOXJ1LD"
  bank-filter-list=${?BANK_FILTER_LIST}
}